{"ast":null,"code":"var _jsxFileName = \"/Users/spaul/dev/london/my-app/src/DeathChart.tsx\",\n    _s = $RefreshSig$();\n\nimport * as d3 from 'd3';\nimport React, { useEffect } from 'react';\nimport useDeathDays from './DeathDays';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst DeathChart = () => {\n  _s();\n\n  const deathDays = useDeathDays({});\n  useEffect(() => {\n    var margin = {\n      top: 10,\n      right: 30,\n      bottom: 30,\n      left: 60\n    },\n        width = 460 - margin.left - margin.right,\n        height = 400 - margin.top - margin.bottom; // append the svg object to the body of the page\n\n    var svg = d3.select(\"#death-chart\").append(\"svg\").attr(\"width\", width + margin.left + margin.right).attr(\"height\", height + margin.top + margin.bottom).append(\"g\").attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\"); // Add X axis --> it is a date format\n\n    var x = d3.scaleTime().domain(d3.extent(deathDays, d => d.date)).range([0, width]);\n    svg.append(\"g\").attr(\"transform\", \"translate(0,\" + height + \")\").call(d3.axisBottom(x)); // Add Y axis\n\n    var y = d3.scaleLinear().domain([0, d3.max(deathDays, d => +d.deaths)]).range([height, 0]);\n    svg.append(\"g\").call(d3.axisLeft(y)); // Add the line\n\n    svg.append(\"path\").datum(deathDays).attr(\"fill\", \"none\").attr(\"stroke\", \"red\").attr(\"stroke-width\", 1.5).attr(\"d\", d3.line().x(d => x(d.date)).y(d => y(d.deaths)));\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"death-chart\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 12\n  }, this);\n};\n\n_s(DeathChart, \"euxcpmU0HIqid/DhA35a77F13Tc=\", false, function () {\n  return [useDeathDays];\n});\n\n_c = DeathChart;\nexport default DeathChart;\n\nvar _c;\n\n$RefreshReg$(_c, \"DeathChart\");","map":{"version":3,"names":["d3","React","useEffect","useDeathDays","DeathChart","deathDays","margin","top","right","bottom","left","width","height","svg","select","append","attr","x","scaleTime","domain","extent","d","date","range","call","axisBottom","y","scaleLinear","max","deaths","axisLeft","datum","line"],"sources":["/Users/spaul/dev/london/my-app/src/DeathChart.tsx"],"sourcesContent":["import * as d3 from 'd3';\nimport React, { useEffect } from 'react';\nimport useDeathDays from './DeathDays';\n\nconst DeathChart = () => {\n    const deathDays = useDeathDays({});\n\n    useEffect(() => {\n        var margin = {top: 10, right: 30, bottom: 30, left: 60},\n            width = 460 - margin.left - margin.right,\n            height = 400 - margin.top - margin.bottom;\n\n        // append the svg object to the body of the page\n        var svg = d3.select(\"#death-chart\")\n        .append(\"svg\")\n            .attr(\"width\", width + margin.left + margin.right)\n            .attr(\"height\", height + margin.top + margin.bottom)\n        .append(\"g\")\n            .attr(\"transform\",\n                \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\n        // Add X axis --> it is a date format\n        var x = d3.scaleTime()\n        .domain(d3.extent(deathDays, (d) => d.date))\n        .range([ 0, width ]);\n        svg.append(\"g\")\n        .attr(\"transform\", \"translate(0,\" + height + \")\")\n        .call(d3.axisBottom(x));\n\n        // Add Y axis\n        var y = d3.scaleLinear()\n        .domain([0, d3.max(deathDays, (d) => +d.deaths)])\n        .range([ height, 0 ]);\n        svg.append(\"g\")\n        .call(d3.axisLeft(y));\n\n        // Add the line\n        svg.append(\"path\")\n        .datum(deathDays)\n        .attr(\"fill\", \"none\")\n        .attr(\"stroke\", \"red\")\n        .attr(\"stroke-width\", 1.5)\n        .attr(\"d\", d3.line()\n            .x((d) => x(d.date))\n            .y((d) => y(d.deaths))\n        )\n    },[]);\n    return <div id=\"death-chart\">\n    </div>\n}\n\nexport default DeathChart;"],"mappings":";;;AAAA,OAAO,KAAKA,EAAZ,MAAoB,IAApB;AACA,OAAOC,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,YAAP,MAAyB,aAAzB;;;AAEA,MAAMC,UAAU,GAAG,MAAM;EAAA;;EACrB,MAAMC,SAAS,GAAGF,YAAY,CAAC,EAAD,CAA9B;EAEAD,SAAS,CAAC,MAAM;IACZ,IAAII,MAAM,GAAG;MAACC,GAAG,EAAE,EAAN;MAAUC,KAAK,EAAE,EAAjB;MAAqBC,MAAM,EAAE,EAA7B;MAAiCC,IAAI,EAAE;IAAvC,CAAb;IAAA,IACIC,KAAK,GAAG,MAAML,MAAM,CAACI,IAAb,GAAoBJ,MAAM,CAACE,KADvC;IAAA,IAEII,MAAM,GAAG,MAAMN,MAAM,CAACC,GAAb,GAAmBD,MAAM,CAACG,MAFvC,CADY,CAKZ;;IACA,IAAII,GAAG,GAAGb,EAAE,CAACc,MAAH,CAAU,cAAV,EACTC,MADS,CACF,KADE,EAELC,IAFK,CAEA,OAFA,EAESL,KAAK,GAAGL,MAAM,CAACI,IAAf,GAAsBJ,MAAM,CAACE,KAFtC,EAGLQ,IAHK,CAGA,QAHA,EAGUJ,MAAM,GAAGN,MAAM,CAACC,GAAhB,GAAsBD,MAAM,CAACG,MAHvC,EAITM,MAJS,CAIF,GAJE,EAKLC,IALK,CAKA,WALA,EAMF,eAAeV,MAAM,CAACI,IAAtB,GAA6B,GAA7B,GAAmCJ,MAAM,CAACC,GAA1C,GAAgD,GAN9C,CAAV,CANY,CAcZ;;IACA,IAAIU,CAAC,GAAGjB,EAAE,CAACkB,SAAH,GACPC,MADO,CACAnB,EAAE,CAACoB,MAAH,CAAUf,SAAV,EAAsBgB,CAAD,IAAOA,CAAC,CAACC,IAA9B,CADA,EAEPC,KAFO,CAED,CAAE,CAAF,EAAKZ,KAAL,CAFC,CAAR;IAGAE,GAAG,CAACE,MAAJ,CAAW,GAAX,EACCC,IADD,CACM,WADN,EACmB,iBAAiBJ,MAAjB,GAA0B,GAD7C,EAECY,IAFD,CAEMxB,EAAE,CAACyB,UAAH,CAAcR,CAAd,CAFN,EAlBY,CAsBZ;;IACA,IAAIS,CAAC,GAAG1B,EAAE,CAAC2B,WAAH,GACPR,MADO,CACA,CAAC,CAAD,EAAInB,EAAE,CAAC4B,GAAH,CAAOvB,SAAP,EAAmBgB,CAAD,IAAO,CAACA,CAAC,CAACQ,MAA5B,CAAJ,CADA,EAEPN,KAFO,CAED,CAAEX,MAAF,EAAU,CAAV,CAFC,CAAR;IAGAC,GAAG,CAACE,MAAJ,CAAW,GAAX,EACCS,IADD,CACMxB,EAAE,CAAC8B,QAAH,CAAYJ,CAAZ,CADN,EA1BY,CA6BZ;;IACAb,GAAG,CAACE,MAAJ,CAAW,MAAX,EACCgB,KADD,CACO1B,SADP,EAECW,IAFD,CAEM,MAFN,EAEc,MAFd,EAGCA,IAHD,CAGM,QAHN,EAGgB,KAHhB,EAICA,IAJD,CAIM,cAJN,EAIsB,GAJtB,EAKCA,IALD,CAKM,GALN,EAKWhB,EAAE,CAACgC,IAAH,GACNf,CADM,CACHI,CAAD,IAAOJ,CAAC,CAACI,CAAC,CAACC,IAAH,CADJ,EAENI,CAFM,CAEHL,CAAD,IAAOK,CAAC,CAACL,CAAC,CAACQ,MAAH,CAFJ,CALX;EASH,CAvCQ,EAuCP,EAvCO,CAAT;EAwCA,oBAAO;IAAK,EAAE,EAAC;EAAR;IAAA;IAAA;IAAA;EAAA,QAAP;AAEH,CA7CD;;GAAMzB,U;UACgBD,Y;;;KADhBC,U;AA+CN,eAAeA,UAAf"},"metadata":{},"sourceType":"module"}