{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useEffect, useState } from 'react';\nimport { useRecoilState } from 'recoil';\nimport DeathsFile from './assets/deaths.json';\nimport Age from './State/Age';\nimport TheDate from './State/Date';\nimport Sex from './State/Sex';\n\nconst useDeaths = () => {\n  _s();\n\n  const [deaths, setDeaths] = useState(DeathsFile);\n  const [age] = useRecoilState(Age);\n  const [sex] = useRecoilState(Sex);\n  const [date] = useRecoilState(TheDate);\n  useEffect(() => {\n    setDeaths(() => {\n      let ds = [];\n\n      for (let d of DeathsFile) {\n        if (d.age >= age.min && d.age <= age.max && (date === null || d.date === date)) {\n          if (sex !== -1) {\n            if (d.gender === sex) {\n              ds.push(d);\n            }\n          } else {\n            ds.push(d);\n          }\n        }\n      }\n\n      return ds;\n    });\n  }, [sex, age, date]);\n  return deaths;\n};\n\n_s(useDeaths, \"3fXrznVmFrzZcP1T282Vr5nkEzM=\", false, function () {\n  return [useRecoilState, useRecoilState, useRecoilState];\n});\n\nexport default useDeaths;","map":{"version":3,"names":["useEffect","useState","useRecoilState","DeathsFile","Age","TheDate","Sex","useDeaths","deaths","setDeaths","age","sex","date","ds","d","min","max","gender","push"],"sources":["/Users/spaul/dev/london/my-app/src/Deaths.ts"],"sourcesContent":["import { useEffect, useState } from 'react';\nimport { useRecoilState } from 'recoil';\nimport DeathsFile from './assets/deaths.json';\nimport Age from './State/Age';\nimport TheDate from './State/Date';\nimport Sex from './State/Sex';\nimport { CoordinateType } from './Streets';\n\ntype DeathType = CoordinateType&{\n    age: number;\n    gender: number;\n    date: string;\n}\n\nconst useDeaths = () => {\n    const [ deaths, setDeaths ] = useState<Array<DeathType>>(DeathsFile);\n    const [ age ] = useRecoilState(Age);\n    const [ sex ] = useRecoilState(Sex);\n    const [ date ] = useRecoilState(TheDate);\n\n    useEffect(() => {\n        setDeaths(() => {\n            let ds: Array<DeathType> = [];\n            for (let d of DeathsFile) {\n                if (d.age >= age.min && d.age <= age.max && (date === null || d.date === date)) {\n                    if (sex !== -1) {\n                        if (d.gender === sex) {\n                            ds.push(d);\n                        }\n                    } else {\n                        ds.push(d);\n                    }\n                }\n            }\n            return ds;\n        });\n    },[sex, age, date]);\n\n    return deaths;\n}\n\nexport default useDeaths;"],"mappings":";;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,SAASC,cAAT,QAA+B,QAA/B;AACA,OAAOC,UAAP,MAAuB,sBAAvB;AACA,OAAOC,GAAP,MAAgB,aAAhB;AACA,OAAOC,OAAP,MAAoB,cAApB;AACA,OAAOC,GAAP,MAAgB,aAAhB;;AASA,MAAMC,SAAS,GAAG,MAAM;EAAA;;EACpB,MAAM,CAAEC,MAAF,EAAUC,SAAV,IAAwBR,QAAQ,CAAmBE,UAAnB,CAAtC;EACA,MAAM,CAAEO,GAAF,IAAUR,cAAc,CAACE,GAAD,CAA9B;EACA,MAAM,CAAEO,GAAF,IAAUT,cAAc,CAACI,GAAD,CAA9B;EACA,MAAM,CAAEM,IAAF,IAAWV,cAAc,CAACG,OAAD,CAA/B;EAEAL,SAAS,CAAC,MAAM;IACZS,SAAS,CAAC,MAAM;MACZ,IAAII,EAAoB,GAAG,EAA3B;;MACA,KAAK,IAAIC,CAAT,IAAcX,UAAd,EAA0B;QACtB,IAAIW,CAAC,CAACJ,GAAF,IAASA,GAAG,CAACK,GAAb,IAAoBD,CAAC,CAACJ,GAAF,IAASA,GAAG,CAACM,GAAjC,KAAyCJ,IAAI,KAAK,IAAT,IAAiBE,CAAC,CAACF,IAAF,KAAWA,IAArE,CAAJ,EAAgF;UAC5E,IAAID,GAAG,KAAK,CAAC,CAAb,EAAgB;YACZ,IAAIG,CAAC,CAACG,MAAF,KAAaN,GAAjB,EAAsB;cAClBE,EAAE,CAACK,IAAH,CAAQJ,CAAR;YACH;UACJ,CAJD,MAIO;YACHD,EAAE,CAACK,IAAH,CAAQJ,CAAR;UACH;QACJ;MACJ;;MACD,OAAOD,EAAP;IACH,CAdQ,CAAT;EAeH,CAhBQ,EAgBP,CAACF,GAAD,EAAMD,GAAN,EAAWE,IAAX,CAhBO,CAAT;EAkBA,OAAOJ,MAAP;AACH,CAzBD;;GAAMD,S;UAEcL,c,EACAA,c,EACCA,c;;;AAuBrB,eAAeK,SAAf"},"metadata":{},"sourceType":"module"}