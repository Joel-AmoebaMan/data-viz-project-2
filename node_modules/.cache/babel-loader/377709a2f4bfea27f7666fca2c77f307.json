{"ast":null,"code":"var _jsxFileName = \"/Users/spaul/dev/london/my-app/src/DeathDistributionChart.tsx\",\n    _s = $RefreshSig$();\n\nimport * as d3 from 'd3';\nimport React, { useEffect, useRef } from 'react';\nimport Deaths from './assets/deaths.json';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst DeathDistributionChart = () => {\n  _s();\n\n  const margin = 200,\n        width = 300 - margin,\n        height = 300 - margin;\n  let svg = useRef(d3.selectAll(\"div\"));\n  let xScale = d3.scaleBand().range([0, 300]).padding(0.4),\n      yScale = d3.scaleLinear().range([height, 0]);\n\n  const graph = () => {\n    if (svg.current) {\n      svg.current.selectAll(\".bar\").data(Deaths).enter().append(\"rect\").attr(\"class\", \"bar\").attr(\"x\", d => xScale(d.gender)).attr(\"y\", d => yScale(d.age)).attr(\"width\", xScale.bandwidth()).attr(\"height\", function (d) {\n        return height - yScale(d.age);\n      });\n    }\n  };\n\n  const draw = () => {\n    var s = d3.selectAll('#death-distribution svg g');\n    var chart = d3.selectAll('#death-distribution');\n    s = s.remove(); //@ts-ignore\n\n    var width = chart.node().getBoundingClientRect().width - 90; //@ts-ignore\n\n    svg.current = d3.select(\"#death-distribution svg\").attr(\"width\", width).attr(\"height\", height).append(\"g\").attr(\"transform\", \"translate(\" + margin + \",\" + margin + \")\");\n    xScale.domain(Deaths.map(d => d.gender.toString()));\n    yScale.domain([0, d3.max(Deaths, d => d.age)]);\n    svg.current.append(\"g\").attr(\"transform\", \"translate(0,\" + height + \")\"); //@ts-ignore\n\n    svg.current.append(\"g\").call(d3.axisLeft(yScale));\n    graph();\n  };\n\n  useEffect(() => {\n    draw();\n    d3.select(window).on(\"resize\", function () {\n      draw();\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"death-distribution\",\n    style: {\n      overflow: 'visible'\n    },\n    children: /*#__PURE__*/_jsxDEV(\"svg\", {\n      width: \"100%\",\n      style: {\n        overflow: 'visible'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 9\n  }, this);\n};\n\n_s(DeathDistributionChart, \"P4QkRe0k/YAmf3z9I+VDqWHPsEE=\");\n\n_c = DeathDistributionChart;\nexport default DeathDistributionChart;\n\nvar _c;\n\n$RefreshReg$(_c, \"DeathDistributionChart\");","map":{"version":3,"names":["d3","React","useEffect","useRef","Deaths","DeathDistributionChart","margin","width","height","svg","selectAll","xScale","scaleBand","range","padding","yScale","scaleLinear","graph","current","data","enter","append","attr","d","gender","age","bandwidth","draw","s","chart","remove","node","getBoundingClientRect","select","domain","map","toString","max","call","axisLeft","window","on","overflow"],"sources":["/Users/spaul/dev/london/my-app/src/DeathDistributionChart.tsx"],"sourcesContent":["import * as d3 from 'd3';\nimport React, { useEffect, useRef } from 'react';\nimport Deaths from './assets/deaths.json';\n\nconst DeathDistributionChart = () => {\n    const margin = 200,\n    width = 300 - margin,\n    height = 300 - margin\n    let svg = useRef(d3.selectAll(\"div\"));\n\n    \n    let xScale = d3.scaleBand().range([0, 300]).padding(0.4),\n    yScale = d3.scaleLinear().range([height, 0]);\n\n    const graph = () => {\n\n        if (svg.current) {\n            svg.current.selectAll(\".bar\")\n            .data(Deaths)\n            .enter().append(\"rect\")\n            .attr(\"class\", \"bar\")\n            .attr(\"x\", (d) => xScale(d.gender as any) as any )\n            .attr(\"y\", (d) => yScale(d.age) )\n            .attr(\"width\", xScale.bandwidth())\n            .attr(\"height\", function(d) { return height - yScale(d.age); });\n        }\n    }\n\n    const draw = () => {\n        var s = d3.selectAll('#death-distribution svg g');\n        var chart = d3.selectAll('#death-distribution');\n        s = s.remove();\n        //@ts-ignore\n        var width = chart.node().getBoundingClientRect().width - 90;\n        //@ts-ignore\n        svg.current = d3.select(\"#death-distribution svg\")\n            .attr(\"width\", width)\n            .attr(\"height\", height)\n            .append(\"g\")\n            .attr(\"transform\",\n                \"translate(\" + margin + \",\" + margin + \")\");\n\n        xScale.domain(Deaths.map((d) => d.gender.toString() ));\n        yScale.domain([0, d3.max(Deaths, (d) => d.age as any )]);\n\n        svg.current.append(\"g\")\n        .attr(\"transform\", \"translate(0,\" + height + \")\")\n        //@ts-ignore\n\n        svg.current.append(\"g\")\n        .call(d3.axisLeft(yScale));\n\n        graph();\n    }\n\n    useEffect(() => {\n        draw();\n        \n        d3.select(window)\n            .on(\"resize\", function() {\n                draw();\n            });\n    },[]);\n\n    return (\n        <div id=\"death-distribution\" style={{ overflow: 'visible' }}>\n            <svg width=\"100%\" style={{ overflow: 'visible' }}></svg>\n        </div>\n    )\n}\n\nexport default DeathDistributionChart;"],"mappings":"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"},"metadata":{},"sourceType":"module"}